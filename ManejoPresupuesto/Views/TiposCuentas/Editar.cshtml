@model TipoCuenta

@{
    ViewData["Title"] = "Editar Tipo Cuenta";
}

<h1>Editar Tipo Cuenta: @Model.Nombre</h1>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="Editar">
    <!--Agregamos el Id del registro que vamos actualizar-->
    <input type="hidden" asp-for="Id" />
    <div class="mb-3">
        <!-- con asp-for nos traemos el nombre del campo desde el modelo TipoCuenta y podemos eliminar la asignacion manual
             del nombre del Label pues se asignara desde el modelo, asi si este cambia desde el modelo, cambiara en el label de la vista-->
        <label asp-for="Nombre" class="form-label"></label>
        <input type="text" asp-for="Nombre" class="form-control" />
        <!-- Creamos las validaciones del lado del Front-End  -->
        <span asp-validation-for="Nombre" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Enviar</button>
    <!-- Creamos el link para cancelar que nos llevara al index de TiposCuentas  -->
    <a class="btn btn-secondary" asp-action="Index">Cancelar</a>
</form>

<!-- Colocar aqui el section nos permite que se respete el orden de los jquery asignados en _Layout  -->
@section Scripts{

    <partial name="_ValidationScriptsPartial" />
}
